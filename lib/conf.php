<?php

	// Conf

	class Conf extends Object
	{
		protected static
			$VARS = Array();

		// custom separator for array vars
		public static function sep()
		{
			return ':';
		}

		static function Defaults()
		{
			Conf::set('APP:NAME', 'Zenit CMS');
			Conf::set('APP:VERSION', '1.0');

			Conf::set('APP:ROOT', Util::fixslashes(realpath('../.')).'/');
			Conf::set('WWW:ROOT', Util::fixslashes(preg_replace('/\/[^\/]+$/', '', $_SERVER['SCRIPT_NAME'])));
			Conf::set('WWW:HOST', parse_url($_SERVER['REQUEST_URI'], PHP_URL_HOST));

			// framework files
			Conf::set('APP:LIBRARY', Conf::get('APP:ROOT') . '/lib/');
			// on-the-fly files for include
			Conf::set('APP:IMPORTS', Conf::get('APP:ROOT') . '/imports/');
			// on-the-fly autoload classes
			Conf::set('APP:AUTOLOAD', Conf::get('APP:ROOT') . '/autoload/');
			// location for UI template files
			Conf::set('APP:UI', Conf::get('APP:ROOT') . '/ui/');

			// cache location, will be created if not present
			Conf::set('APP:CACHE', Conf::get('APP:ROOT') . '/.cache/');
			// temporary location, will be created if not present
			Conf::set('APP:TMP', Conf::get('APP:ROOT') . '/.tmp/');

			// upload path
			Conf::set('APP:UPLOAD', Conf::get('APP:ROOT').'/uploads/');
			Conf::set('WWW:UPLOAD', Conf::get('WWW:ROOT') . '/uploads/');

			Conf::mset('PHP:GLOBALS', 'GET|POST|COOKIE|REQUEST|SESSION|FILES|SERVER|ENV');
			Conf::mset('HTTP:METHODS', 'GET|HEAD|POST|PUT|DELETE|OPTIONS');


			// Spam protection
			Conf::set('SECURITY:SPAM:CHECK', FALSE);
			Conf::set('SECURITY:SPAM:ROUTE', '/404');
			Conf::set('SECURITY:SPAM:ALLOW:IP', '127.0.0.1');
			Conf::set('SECURITY:SPAM:BLACKLIST:IP', '');
			Conf::set('SECURITY:SPAM:BLACKLIST:DNS', '');

			// Hotlink protection
			Conf::set('SECURITY:HOTLINK:CHECK', FALSE);
			Conf::set('SECURITY:HOTLINK:ROUTE', '/404');

			// Min miliseconds a page is served (use when under DDOS)
			Conf::set('APP:THROTTLE', 0);
			// Supress any application output
			Conf::set('APP:QUIET', FALSE);
			// LEVEL: 0 - disabled, 1..3 levels
			Conf::set('DEBUG:LEVEL', 0);

			// HTTP charset
			Conf::set('HTTP:ENCODING', 'utf-8');

			// Func handlers
			Conf::set('HANDLER:ERROR', FALSE);
			Conf::set('HANDLER:ONLOAD', FALSE);
			Conf::set('HANDLER:UNLOAD', FALSE);

			// Database defaults
			Conf::set('DB:DSN', '');
			Conf::set('DB:TYPE', 'MYSQL');
			Conf::set('DB:HOST', 'localhost');
			Conf::set('DB:USER', '');
			Conf::set('DB:PASS', '');
			Conf::set('DB:NAME', '');
			Conf::set('DB:ENCODING', 'utf8');

			// Default Items per page
			Conf::set('UI:ITEMSPERPAGE', 25);

			Conf::set('FORMAT:DATE:LONG', 'Y-m-d H:i:s');
			Conf::set('FORMAT:DATE:SHORT', 'Y-m-d');

			Conf::mset('UI:COLOR:BASIC',
				'FFFFFF|FFDFDF|FFBFBF|FF9F9F|FF7F7F|FF5F5F|FF3F3F|FF1F1F|FF0000|'.
				'DF1F00|C33B00|A75700|8B7300|6F8F00|53AB00|37C700|1BE300|00FF00|'.
				'00DF1F|00C33B|00A757|008B73|006F8F|0053AB|0037C7|001BE3|0000FF|'.
				'0000DF|0000C3|0000A7|00008B|00006F|000053|000037|00001B|000000');
			Conf::set('UI:COLOR:BASIC', array_combine(Conf::get('UI:COLOR:BASIC'), Conf::get('UI:COLOR:BASIC')));

			// twitter app keys
			Conf::set('SOCIAL:TWITTER:KEY', 'lZnKyLlE3s6VvepkrcNGw');
			Conf::set('SOCIAL:TWITTER:SECRET', 'sJnuudj9d7VQEArCM30OGDYD1kte5Id4udN0Qt5NHk');

			// facebook app keys
			Conf::set('SOCIAL:FACEBOOK:KEY', '158607387564724');
			Conf::set('SOCIAL:FACEBOOK:SECRET', '4ad0c242b97cf1606d896805474b5d5e');

			// google app keys
			Conf::set('SOCIAL:GOOGLE:KEY', 'anonymous');
			Conf::set('SOCIAL:GOOGLE:SECRET', 'anonymous');

			// youtube dev key
			Conf::set('SOCIAL:YOUTUBE:KEY', 'AI39si4LeCL1D3eoMvj9xSPf8cNySanmzzFIqtFCo-aouIFaef2BDRuqutyYmyJMZYR64Y8BGy2VMYd5bl9XhgfYtHXlBLJSTQ');

			Conf::set('MAPS:KEY', 'ABQIAAAAQ2iKS3eJUB-BMy-XMyZA2BTnTjnPQZTtnhJEUhUJeG7JGq4inxTfueH8_g_-72_toVWthSEl5bQaxg');

			Conf::set('LICENSE:KEY', '');
		}

	}


	// list of states, http://www.iso.org/iso/iso_3166_code_lists

	$ISOCOUNTRIES = <<<ENDOFLIST

AFGHANISTAN;AF
ÅLAND ISLANDS;AX
ALBANIA;AL
ALGERIA;DZ
AMERICAN SAMOA;AS
ANDORRA;AD
ANGOLA;AO
ANGUILLA;AI
ANTARCTICA;AQ
ANTIGUA AND BARBUDA;AG
ARGENTINA;AR
ARMENIA;AM
ARUBA;AW
AUSTRALIA;AU
AUSTRIA;AT
AZERBAIJAN;AZ
BAHAMAS;BS
BAHRAIN;BH
BANGLADESH;BD
BARBADOS;BB
BELARUS;BY
BELGIUM;BE
BELIZE;BZ
BENIN;BJ
BERMUDA;BM
BHUTAN;BT
BOLIVIA, PLURINATIONAL STATE OF;BO
BONAIRE, SINT EUSTATIUS AND SABA;BQ
BOSNIA AND HERZEGOVINA;BA
BOTSWANA;BW
BOUVET ISLAND;BV
BRAZIL;BR
BRITISH INDIAN OCEAN TERRITORY;IO
BRUNEI DARUSSALAM;BN
BULGARIA;BG
BURKINA FASO;BF
BURUNDI;BI
CAMBODIA;KH
CAMEROON;CM
CANADA;CA
CAPE VERDE;CV
CAYMAN ISLANDS;KY
CENTRAL AFRICAN REPUBLIC;CF
CHAD;TD
CHILE;CL
CHINA;CN
CHRISTMAS ISLAND;CX
COCOS (KEELING) ISLANDS;CC
COLOMBIA;CO
COMOROS;KM
CONGO;CG
CONGO, THE DEMOCRATIC REPUBLIC OF THE;CD
COOK ISLANDS;CK
COSTA RICA;CR
CÔTE D'IVOIRE;CI
CROATIA;HR
CUBA;CU
CURAÇAO;CW
CYPRUS;CY
CZECH REPUBLIC;CZ
DENMARK;DK
DJIBOUTI;DJ
DOMINICA;DM
DOMINICAN REPUBLIC;DO
ECUADOR;EC
EGYPT;EG
EL SALVADOR;SV
EQUATORIAL GUINEA;GQ
ERITREA;ER
ESTONIA;EE
ETHIOPIA;ET
FALKLAND ISLANDS (MALVINAS);FK
FAROE ISLANDS;FO
FIJI;FJ
FINLAND;FI
FRANCE;FR
FRENCH GUIANA;GF
FRENCH POLYNESIA;PF
FRENCH SOUTHERN TERRITORIES;TF
GABON;GA
GAMBIA;GM
GEORGIA;GE
GERMANY;DE
GHANA;GH
GIBRALTAR;GI
GREECE;GR
GREENLAND;GL
GRENADA;GD
GUADELOUPE;GP
GUAM;GU
GUATEMALA;GT
GUERNSEY;GG
GUINEA;GN
GUINEA-BISSAU;GW
GUYANA;GY
HAITI;HT
HEARD ISLAND AND MCDONALD ISLANDS;HM
HOLY SEE (VATICAN CITY STATE);VA
HONDURAS;HN
HONG KONG;HK
HUNGARY;HU
ICELAND;IS
INDIA;IN
INDONESIA;ID
IRAN, ISLAMIC REPUBLIC OF;IR
IRAQ;IQ
IRELAND;IE
ISLE OF MAN;IM
ISRAEL;IL
ITALY;IT
JAMAICA;JM
JAPAN;JP
JERSEY;JE
JORDAN;JO
KAZAKHSTAN;KZ
KENYA;KE
KIRIBATI;KI
KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF;KP
KOREA, REPUBLIC OF;KR
KUWAIT;KW
KYRGYZSTAN;KG
LAO PEOPLE'S DEMOCRATIC REPUBLIC;LA
LATVIA;LV
LEBANON;LB
LESOTHO;LS
LIBERIA;LR
LIBYA;LY
LIECHTENSTEIN;LI
LITHUANIA;LT
LUXEMBOURG;LU
MACAO;MO
MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF;MK
MADAGASCAR;MG
MALAWI;MW
MALAYSIA;MY
MALDIVES;MV
MALI;ML
MALTA;MT
MARSHALL ISLANDS;MH
MARTINIQUE;MQ
MAURITANIA;MR
MAURITIUS;MU
MAYOTTE;YT
MEXICO;MX
MICRONESIA, FEDERATED STATES OF;FM
MOLDOVA, REPUBLIC OF;MD
MONACO;MC
MONGOLIA;MN
MONTENEGRO;ME
MONTSERRAT;MS
MOROCCO;MA
MOZAMBIQUE;MZ
MYANMAR;MM
NAMIBIA;NA
NAURU;NR
NEPAL;NP
NETHERLANDS;NL
NEW CALEDONIA;NC
NEW ZEALAND;NZ
NICARAGUA;NI
NIGER;NE
NIGERIA;NG
NIUE;NU
NORFOLK ISLAND;NF
NORTHERN MARIANA ISLANDS;MP
NORWAY;NO
OMAN;OM
PAKISTAN;PK
PALAU;PW
PALESTINIAN TERRITORY, OCCUPIED;PS
PANAMA;PA
PAPUA NEW GUINEA;PG
PARAGUAY;PY
PERU;PE
PHILIPPINES;PH
PITCAIRN;PN
POLAND;PL
PORTUGAL;PT
PUERTO RICO;PR
QATAR;QA
RÉUNION;RE
ROMANIA;RO
RUSSIAN FEDERATION;RU
RWANDA;RW
SAINT BARTHÉLEMY;BL
SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA;SH
SAINT KITTS AND NEVIS;KN
SAINT LUCIA;LC
SAINT MARTIN (FRENCH PART);MF
SAINT PIERRE AND MIQUELON;PM
SAINT VINCENT AND THE GRENADINES;VC
SAMOA;WS
SAN MARINO;SM
SAO TOME AND PRINCIPE;ST
SAUDI ARABIA;SA
SENEGAL;SN
SERBIA;RS
SEYCHELLES;SC
SIERRA LEONE;SL
SINGAPORE;SG
SINT MAARTEN (DUTCH PART);SX
SLOVAKIA;SK
SLOVENIA;SI
SOLOMON ISLANDS;SB
SOMALIA;SO
SOUTH AFRICA;ZA
SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS;GS
SOUTH SUDAN;SS
SPAIN;ES
SRI LANKA;LK
SUDAN;SD
SURINAME;SR
SVALBARD AND JAN MAYEN;SJ
SWAZILAND;SZ
SWEDEN;SE
SWITZERLAND;CH
SYRIAN ARAB REPUBLIC;SY
TAIWAN, PROVINCE OF CHINA;TW
TAJIKISTAN;TJ
TANZANIA, UNITED REPUBLIC OF;TZ
THAILAND;TH
TIMOR-LESTE;TL
TOGO;TG
TOKELAU;TK
TONGA;TO
TRINIDAD AND TOBAGO;TT
TUNISIA;TN
TURKEY;TR
TURKMENISTAN;TM
TURKS AND CAICOS ISLANDS;TC
TUVALU;TV
UGANDA;UG
UKRAINE;UA
UNITED ARAB EMIRATES;AE
UNITED KINGDOM;GB
UNITED STATES;US
UNITED STATES MINOR OUTLYING ISLANDS;UM
URUGUAY;UY
UZBEKISTAN;UZ
VANUATU;VU
VENEZUELA, BOLIVARIAN REPUBLIC OF;VE
VIET NAM;VN
VIRGIN ISLANDS, BRITISH;VG
VIRGIN ISLANDS, U.S.;VI
WALLIS AND FUTUNA;WF
WESTERN SAHARA;EH
YEMEN;YE
ZAMBIA;ZM
ZIMBABWE;ZW

ENDOFLIST;

	// timezone
	date_default_timezone_set('GMT');

	$COUNTRIES = Array();
	foreach (explode("\n", $ISOCOUNTRIES) as $country) {
		//
		if (trim($country)) {
			//
			list($name, $code) = explode(';', $country);

			$COUNTRIES[ $code ] = $name;
		}
	}

	Conf::Set("COUNTRIES", $COUNTRIES);


	$MONTHS = array();
	for ($m = 1; $m < 13; $m++) {
		//
		$MONTHS[ str_pad($m, 2, '0', STR_PAD_LEFT) ] = date('F', mktime(0, 0, 0, $m, 1, 2005));
	}
	Conf::Set("MONTHS", $MONTHS);


	$WDAYS = array();
	$timestamp = strtotime('next Monday');
	for ($i = 0; $i < 7; $i++) {
		$WDAYS[ $i ] = date('l', $timestamp);
		$timestamp = strtotime('+1 day', $timestamp);
	}
	Conf::Set("WDAYS", $WDAYS);

	$MDAYS = array();
	for ($i = 1; $i < 32; $i++) {
		$MDAYS[ $i ] = date('jS', mktime(0, 0, 0, 1, $i, 2000));
	}
	Conf::Set("MDAYS", $MDAYS);

?>